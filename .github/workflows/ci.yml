# ワークフローの名前。GitHubの "Actions" タブで表示されます。
name: PowerShell AutoSetup Script CI

# このワークフローが実行されるタイミング（トリガー）を指定します。
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 実行する一連のジョブを定義します。
jobs:
  run-script-on-windows:
    runs-on: windows-latest
    steps:
    # ステップ1: リポジトリのコードを仮想マシンにダウンロードします。
    - name: Checkout repository code
      uses: actions/checkout@v4

    # ステップ2: wingetコマンドが使えるように環境変数PATHを更新します。
    # GITHUB_ENVファイルを使うことで、後続のステップに環境変数を確実に引き継ぎます。
    - name: Add winget to PATH environment variable
      shell: pwsh
      run: echo "PATH=$env:PATH;$env:LOCALAPPDATA\Microsoft\WindowsApps" >> $env:GITHUB_ENV

    # ステップ3: (デバッグ用) 更新されたPATHの内容を確認します。
    # これでwingetへのパスが正しく追加されたかを確認できます。
    - name: Display PATH to verify
      shell: pwsh
      run: |
        echo "PATH is:"
        echo $env:PATH

    # ステップ4: AutoSetup.ps1 のフェーズ1を実行します。
    - name: Run AutoSetup Phase 1
      shell: pwsh
      run: .\AutoSetup.ps1

    # ステップ5: AutoSetup.ps1 のフェーズ2を実行します。
    - name: Run AutoSetup Phase 2
      shell: pwsh
      run: .\AutoSetup.ps1 -SetupPhase 2