# ワークフローの名前。GitHubの "Actions" タブで表示されます。
name: PowerShell AutoSetup Script CI

# このワークフローが実行されるタイミング（トリガー）を指定します。
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 実行する一連のジョブを定義します。
jobs:
  run-script-on-windows:
    runs-on: windows-latest
    steps:
    # ステップ1: リポジトリのコードを仮想マシンにダウンロードします。
    - name: Checkout repository code
      uses: actions/checkout@v4

    # ステップ2: フェーズ1を実行します。
    # wingetのフルパスを直接cmd.exeに渡すラッパー関数を定義します。
    - name: Run AutoSetup Phase 1
      shell: powershell
      run: |
        # winget.exeへのフルパスを事前に変数に格納
        $wingetPath = Join-Path $env:LOCALAPPDATA "Microsoft\WindowsApps\winget.exe"

        # wingetコマンドの挙動を上書きするラッパー関数
        function global:winget {
            $argumentString = $args -join ' '
            # cmd.exeを呼び出し、winget.exeのフルパスと引数を渡して実行させる
            & cmd.exe /c "`"$wingetPath`" $argumentString"
        }
        # スクリプトを実行（これにより上記のラッパー関数が使われる）
        .\AutoSetup.ps1

    # ステップ3: フェーズ2を実行します。
    # こちらのステップでも同様にラッパー関数を定義します。
    - name: Run AutoSetup Phase 2
      shell: powershell
      run: |
        $wingetPath = Join-Path $env:LOCALAPPDATA "Microsoft\WindowsApps\winget.exe"
        function global:winget {
            $argumentString = $args -join ' '
            & cmd.exe /c "`"$wingetPath`" $argumentString"
        }
        .\AutoSetup.ps1 -SetupPhase 2