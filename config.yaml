# ================================================================
# AutoSetupスクリプト設定ファイル
# ================================================================
# 実行したいタスクをフェーズごとに定義します。
# 不要な項目は、行頭に「#」を付けてコメントアウトするとスキップされます。

# ----------------------------------------------------------------
# ■ フェーズ1: システムの基本セットアップ
# ----------------------------------------------------------------
phase1:
  # --- Wingetによるアプリケーションのインストール ---
  wingetInstall:
    - id: Microsoft.PowerShell                 # 最新のPowerShell
    - id: Google.Chrome                        # Webブラウザ
    - id: 7zip.7zip                            # 高性能なファイル圧縮・解凍ソフト
    - id: Microsoft.PowerToys                  # Windowsを便利にするユーティリティ集
    - id: Zoom.Zoom                            # Web会議ツール
    - id: Git.Git                              # バージョン管理システム
    - id: OpenJS.NodeJS.LTS                    # JavaScript実行環境 (長期サポート版)
    - id: Python.Python.3.12                   # プログラミング言語 Python
    - id: astral-sh.uv                         # 高速なPythonパッケージインストーラー
    - id: Microsoft.VisualStudioCode           # 統合開発環境 (IDE)
      options: '--override "/SILENT /NORESTART /MERGETASKS=!runcode,desktopicon,addcontextmenufiles,addcontextmenufolders,associatewithfiles,addtopath"'
    - id: Adobe.Acrobat.Reader.64-bit          # PDF閲覧ソフト
      options: '--override "/sAll /rs /rps /msi EULA_ACCEPT=YES"'

  # --- 不要なプリインストールアプリの削除 ---
  appxRemove:
    - name: "*Cortana*"                        # AIアシスタント
    - name: "*Microsoft.BingNews*"             # ニュースアプリ
    - name: "*Microsoft.GetHelp*"              # ヘルプ表示アプリ
    - name: "*Microsoft.Getstarted*"           # ヒント表示アプリ
    - name: "*Microsoft.Office.OneNote*"       # OneNote (ストアアプリ版)
    - name: "*Microsoft.People*"               # People (連絡先) アプリ
    - name: "*Microsoft.WindowsFeedbackHub*"   # フィードバックHub
    - name: "*Microsoft.YourPhone*"            # スマートフォン連携
    - name: "*Microsoft.ZuneMusic*"            # Grooveミュージック
    - name: "*Microsoft.ZuneVideo*"            # 映画 & テレビ

  # --- Windowsのシステム設定変更 ---
  windowsTweaks:
    - description: 隠しファイルとフォルダを表示する
      type: Set-RegistryValue # レジストリの値を設定
      path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
      name: Hidden
      value: 1
      valueType: DWord
    - description: ファイルの拡張子を常に表示する
      type: Set-RegistryValue
      path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
      name: HideFileExt
      value: 0
      valueType: DWord
    - description: エクスプローラーのアドレスバーに完全なパスを表示する
      type: Set-RegistryValue
      path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\CabinetState
      name: FullPathAddress
      value: 1
      valueType: DWord
    - description: エクスプローラーの起動時に「PC」を表示する
      type: Set-RegistryValue
      path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
      name: LaunchTo
      value: 1
      valueType: DWord
    - description: 高速スタートアップを無効化する
      type: Set-RegistryValue
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power
      name: HiberbootEnabled
      value: 0
      valueType: DWord
    - description: 右クリックメニューを従来のスタイルに戻す (Win11)
      type: Create-RegistryKeyWithDefault # キーを作成し、その既定値を設定
      path: HKCU:\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32
      value: "" # 空の既定値を設定

# ----------------------------------------------------------------
# ■ フェーズ2: 開発者向けパッケージのインストール（再起動後）
# ----------------------------------------------------------------
phase2:
  # =================================================================
  # ■ パッケージマネージャーとインストールするパッケージの定義
  # =================================================================
  # ここでは、コマンドと引数をリスト形式で定義し、安全な実行を可能にします。
  packageManagers:
    # --- npm (Node.js) の設定 ---
    - managerName: 'npm'
      commandName: 'npm'
      checkArgs: ['list', '-g', '{package}', '--depth=0']
      installArgs: ['install', '-g', '{package}']
      packages:
        - typescript
        - ts-node
        - nodemon
        - eslint
        - prettier
        - pnpm

    # --- pip (Python) の設定 (uvを使用) ---
    - managerName: 'pip'
      commandName: 'uv'
      checkArgs: ['pip', 'show', '{package}']
      installArgs: ['pip', 'install', '{package}', '--system']
      packages:
        - jupyterlab
        - jupyterlab-language-pack-ja-jp
        - requests
        - numpy
        - pandas
        - matplotlib
        - black
        - ruff
        - python-dotenv
        - scikit-learn
        - seaborn
        - openpyxl
        - fastapi
        - lxml

    # --- cargo (Rust) の設定例 ---
    # 注: cargoの確認コマンドはパイプライン(|)を含むため、このスクリプトでは直接サポートしていません。
    # checkArgsを修正するか、インストール済でも再実行を許容する運用を検討してください。
    # - managerName: 'cargo'
    #   commandName: 'cargo'
    #   checkArgs: ['install', '--list'] # 例: cargo install --list | findstr "{package}" のような確認が必要
    #   installArgs: ['install', '{package}']
    #   packages:
    #     - ripgrep
    #     - bat
    #     - fd-find